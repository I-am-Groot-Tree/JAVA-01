<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.java.datasource.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.example.java.datasource.model.Order">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="user_id" />
    <result column="order_no" jdbcType="VARCHAR" property="order_no" />
    <result column="order_status" jdbcType="TINYINT" property="order_status" />
    <result column="product_count" jdbcType="INTEGER" property="product_count" />
    <result column="product_price" jdbcType="DECIMAL" property="product_price" />
    <result column="pay_channel" jdbcType="VARCHAR" property="pay_channel" />
    <result column="pay_no" jdbcType="VARCHAR" property="pay_no" />
    <result column="total_amount" jdbcType="DECIMAL" property="total_amount" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
    <result column="is_deleted" jdbcType="TINYINT" property="is_deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, order_no, order_status, product_count, product_price, pay_channel, pay_no, 
    total_amount, address, create_time, update_time, is_deleted
  </sql>
  <select id="selectByExample" parameterType="com.example.java.datasource.model.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.java.datasource.model.Order">
    insert into order (id, user_id, order_no, 
      order_status, product_count, product_price, 
      pay_channel, pay_no, total_amount, 
      address, create_time, update_time, 
      is_deleted)
    values (#{id,jdbcType=BIGINT}, #{user_id,jdbcType=VARCHAR}, #{order_no,jdbcType=VARCHAR}, 
      #{order_status,jdbcType=TINYINT}, #{product_count,jdbcType=INTEGER}, #{product_price,jdbcType=DECIMAL}, 
      #{pay_channel,jdbcType=VARCHAR}, #{pay_no,jdbcType=VARCHAR}, #{total_amount,jdbcType=DECIMAL}, 
      #{address,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, #{update_time,jdbcType=TIMESTAMP}, 
      #{is_deleted,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.java.datasource.model.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      <if test="order_no != null">
        order_no,
      </if>
      <if test="order_status != null">
        order_status,
      </if>
      <if test="product_count != null">
        product_count,
      </if>
      <if test="product_price != null">
        product_price,
      </if>
      <if test="pay_channel != null">
        pay_channel,
      </if>
      <if test="pay_no != null">
        pay_no,
      </if>
      <if test="total_amount != null">
        total_amount,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
      <if test="is_deleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=VARCHAR},
      </if>
      <if test="order_no != null">
        #{order_no,jdbcType=VARCHAR},
      </if>
      <if test="order_status != null">
        #{order_status,jdbcType=TINYINT},
      </if>
      <if test="product_count != null">
        #{product_count,jdbcType=INTEGER},
      </if>
      <if test="product_price != null">
        #{product_price,jdbcType=DECIMAL},
      </if>
      <if test="pay_channel != null">
        #{pay_channel,jdbcType=VARCHAR},
      </if>
      <if test="pay_no != null">
        #{pay_no,jdbcType=VARCHAR},
      </if>
      <if test="total_amount != null">
        #{total_amount,jdbcType=DECIMAL},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="is_deleted != null">
        #{is_deleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.java.datasource.model.OrderExample" resultType="java.lang.Long">
    select count(*) from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.user_id != null">
        user_id = #{record.user_id,jdbcType=VARCHAR},
      </if>
      <if test="record.order_no != null">
        order_no = #{record.order_no,jdbcType=VARCHAR},
      </if>
      <if test="record.order_status != null">
        order_status = #{record.order_status,jdbcType=TINYINT},
      </if>
      <if test="record.product_count != null">
        product_count = #{record.product_count,jdbcType=INTEGER},
      </if>
      <if test="record.product_price != null">
        product_price = #{record.product_price,jdbcType=DECIMAL},
      </if>
      <if test="record.pay_channel != null">
        pay_channel = #{record.pay_channel,jdbcType=VARCHAR},
      </if>
      <if test="record.pay_no != null">
        pay_no = #{record.pay_no,jdbcType=VARCHAR},
      </if>
      <if test="record.total_amount != null">
        total_amount = #{record.total_amount,jdbcType=DECIMAL},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.create_time != null">
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.update_time != null">
        update_time = #{record.update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.is_deleted != null">
        is_deleted = #{record.is_deleted,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.user_id,jdbcType=VARCHAR},
      order_no = #{record.order_no,jdbcType=VARCHAR},
      order_status = #{record.order_status,jdbcType=TINYINT},
      product_count = #{record.product_count,jdbcType=INTEGER},
      product_price = #{record.product_price,jdbcType=DECIMAL},
      pay_channel = #{record.pay_channel,jdbcType=VARCHAR},
      pay_no = #{record.pay_no,jdbcType=VARCHAR},
      total_amount = #{record.total_amount,jdbcType=DECIMAL},
      address = #{record.address,jdbcType=VARCHAR},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      update_time = #{record.update_time,jdbcType=TIMESTAMP},
      is_deleted = #{record.is_deleted,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.java.datasource.model.Order">
    update order
    <set>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=VARCHAR},
      </if>
      <if test="order_no != null">
        order_no = #{order_no,jdbcType=VARCHAR},
      </if>
      <if test="order_status != null">
        order_status = #{order_status,jdbcType=TINYINT},
      </if>
      <if test="product_count != null">
        product_count = #{product_count,jdbcType=INTEGER},
      </if>
      <if test="product_price != null">
        product_price = #{product_price,jdbcType=DECIMAL},
      </if>
      <if test="pay_channel != null">
        pay_channel = #{pay_channel,jdbcType=VARCHAR},
      </if>
      <if test="pay_no != null">
        pay_no = #{pay_no,jdbcType=VARCHAR},
      </if>
      <if test="total_amount != null">
        total_amount = #{total_amount,jdbcType=DECIMAL},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="is_deleted != null">
        is_deleted = #{is_deleted,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.java.datasource.model.Order">
    update order
    set user_id = #{user_id,jdbcType=VARCHAR},
      order_no = #{order_no,jdbcType=VARCHAR},
      order_status = #{order_status,jdbcType=TINYINT},
      product_count = #{product_count,jdbcType=INTEGER},
      product_price = #{product_price,jdbcType=DECIMAL},
      pay_channel = #{pay_channel,jdbcType=VARCHAR},
      pay_no = #{pay_no,jdbcType=VARCHAR},
      total_amount = #{total_amount,jdbcType=DECIMAL},
      address = #{address,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      is_deleted = #{is_deleted,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>